name: Connect to an AWS role from a GitHub repository 

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

env: 
  AWS_REGION: "eu-central-1"

jobs:
  setup:
    defaults:
      run:
        working-directory: ./terraform
    name: Terraform Plan
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.artifact-upload-step.outputs.artifact-id }}
    steps:
      - name: Configure AWS credentials
        id: aws_setup
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE_ARN }}
          role-session-name: GitHub_to_AWS
          aws-region: ${{ env.AWS_REGION }}

      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        id: set_tf_version
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.6

      - name: Terraform Init
        run: terraform init
      
      - uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: test
          if-no-files-found: error
          include-hidden-files: true
          path: .terraform

  check-dir:
    name: Checking name
    runs-on: ubuntu-latest
    needs: [ setup ]

  terraform-fmt:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: [ setup ]
    steps:
      - env:
          DIR: ${{ needs.setup.outputs.output1 }}
        run: terraform fmt

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: [ setup, terraform-fmt ]
    steps:
      - env:
          DIR: ${{ needs.setup.outputs.output1 }}
        run: terraform plan

  terraform-apply:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: [ setup, terraform-fmt, terraform-plan ]
    steps:
      - env:
          DIR: ${{ needs.setup.outputs.output1 }}
        run: terraform apply